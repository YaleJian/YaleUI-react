{"version":3,"sources":["../../src/components/utils/qCloudUtils.js"],"names":["DefaultBucket","HftBucket","Region","HfRegion","getAuthorization","options","callback","bucket","server","url","xhr","XMLHttpRequest","open","onload","e","credentials","data","JSON","parse","target","responseText","TmpSecretId","tmpSecretId","TmpSecretKey","tmpSecretKey","XCosSecurityToken","sessionToken","ExpiredTime","expiredTime","send","cos","COS","hfCos","cosUpload","folderName","file","files","putObject","Bucket","Key","name","Body","err","console","log","cosList","func","delimiter","nextMarker","size","getFileList","hfCosList","cosObj","region","param","Prefix","Delimiter","Marker","MaxKeys","getBucket","Contents","cosDownload","getObject","cosDelete","deleteObject"],"mappings":"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","file":"qCloudUtils.js","sourcesContent":["import COS from \"cos-js-sdk-v5\";\n\nlet DefaultBucket = 'yalejian-1252187891';\nlet HftBucket = 'hfmedia-1301416202';\nlet Region = 'ap-beijing';\nlet HfRegion = 'ap-guangzhou';\n\nlet getAuthorization = function (options, callback, bucket, server) {\n    // 异步获取临时密钥\n    let url = 'https://yalejian.com/service/qCloud/getSts?bucket=' + bucket + \"&server=\" + server;\n    let xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.onload = function (e) {\n        let credentials;\n        let data = {};\n        try {\n            data = JSON.parse(e.target.responseText);\n            credentials = data.credentials;\n        } catch (e) {\n        }\n        callback({\n            TmpSecretId: credentials.tmpSecretId,\n            TmpSecretKey: credentials.tmpSecretKey,\n            XCosSecurityToken: credentials.sessionToken,\n            ExpiredTime: data.expiredTime, // SDK 在 ExpiredTime 时间前，不会再次调用 getAuthorization\n        });\n    };\n    xhr.send();\n};\n\n// 初始化默认COS实例\nlet cos = new COS({\n    getAuthorization: function (options, callback){\n        getAuthorization(options, callback, DefaultBucket)\n    }\n});\n\n//初始化华富默认COS实例\nlet hfCos = new COS({\n    getAuthorization: function (options, callback, server){\n        getAuthorization(options, callback, HftBucket, \"hf\")\n    }\n});\n\nexport var cosUpload = (e, folderName, bucket) => {\n    let file = this.files[0];\n    if (!file) return;\n    cos.putObject({\n        Bucket: bucket || DefaultBucket,\n        Region: Region,\n        Key: folderName + \"/\" + file.name,\n        Body: file,\n    }, function (err, data) {\n        console.log(err || data);\n    });\n};\n//获取文件列表\nexport var cosList = (folderName, func, delimiter, nextMarker, size) => {\n    getFileList(folderName, func, delimiter, nextMarker, size, DefaultBucket, cos, Region);\n};\n\n//华富-获取文件列表\nexport var hfCosList = (folderName, func, delimiter, nextMarker, size) => {\n    getFileList(folderName, func, delimiter, nextMarker, size, HftBucket, hfCos, HfRegion);\n};\n\n//获取文件列表方法\nlet getFileList = (folderName, func, delimiter, nextMarker, size, bucket, cosObj, region) => {\n    let param = {\n        Bucket: bucket,\n        Region: region,\n        Prefix: folderName,\n    };\n    if (delimiter) param.Delimiter = delimiter;\n    if (nextMarker) param.Marker = nextMarker;\n    if (size) param.MaxKeys = size;\n\n    cosObj.getBucket(param, function (err, data) {\n        if(data) {\n            func(data.Contents);\n        }else {\n            func(false, err);\n        }\n    });\n};\nexport var cosDownload = (url) => {\n    cos.getObject({\n        Bucket: DefaultBucket,\n        Region: Region,\n        Key: url,\n    }, function (err, data) {\n        console.log(err || data.Body);\n    });\n};\nexport var cosDelete = (url) => {\n    cos.deleteObject({\n        Bucket: DefaultBucket,\n        Region: Region,\n        Key: url,\n    }, function (err, data) {\n        console.log(err || data);\n    });\n};"]}