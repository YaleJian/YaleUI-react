{"version":3,"sources":["../../src/components/utils/sloarToLunar.js"],"names":["lunarYearArr","lunarMonth","lunarDay","tianGan","diZhi","toLunar","sy","sm","sd","daySpan","Date","UTC","ly","lm","ld","j","length","lunarYearDays","k","lunarYearMonths","hasLeapMonth","indexOf","exec","getTianGan","getDiZhi","lunarYear","leapMonthDays","totalDays","i","monthDays","monthArr","push","splice","tianGanKey","diZhiKey"],"mappings":"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","file":"sloarToLunar.js","sourcesContent":["/* 公历转农历代码思路：\n1、建立农历年份查询表\n2、计算输入公历日期与公历基准的相差天数\n3、从农历基准开始遍历农历查询表，计算自农历基准之后每一年的天数，并用相差天数依次相减，确定农历年份\n4、利用剩余相差天数以及农历每个月的天数确定农历月份\n5、利用剩余相差天数确定农历哪一天 */\n\n// 农历1949-2100年查询表（ASCII编码）\nlet lunarYearArr = [\n    0x0b557, //1949\n    0x06ca0, 0x0b550, 0x15355, 0x04da0, 0x0a5b0, 0x14573, 0x052b0, 0x0a9a8, 0x0e950, 0x06aa0, //1950-1959\n    0x0aea6, 0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260, 0x0f263, 0x0d950, 0x05b57, 0x056a0, //1960-1969\n    0x096d0, 0x04dd5, 0x04ad0, 0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b6a0, 0x195a6, //1970-1979\n    0x095b0, 0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40, 0x0af46, 0x0ab60, 0x09570, //1980-1989\n    0x04af5, 0x04970, 0x064b0, 0x074a3, 0x0ea50, 0x06b58, 0x055c0, 0x0ab60, 0x096d5, 0x092e0, //1990-1999\n    0x0c960, 0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0, 0x092d0, 0x0cab5, //2000-2009\n    0x0a950, 0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9, 0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930, //2010-2019\n    0x07954, 0x06aa0, 0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65, 0x0d530, //2020-2029\n    0x05aa0, 0x076a3, 0x096d0, 0x04afb, 0x04ad0, 0x0a4d0, 0x1d0b6, 0x0d250, 0x0d520, 0x0dd45, //2030-2039\n    0x0b5a0, 0x056d0, 0x055b2, 0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0, //2040-2049\n    0x14b63, 0x09370, 0x049f8, 0x04970, 0x064b0, 0x168a6, 0x0ea50, 0x06b20, 0x1a6c4, 0x0aae0, //2050-2059\n    0x0a2e0, 0x0d2e3, 0x0c960, 0x0d557, 0x0d4a0, 0x0da50, 0x05d55, 0x056a0, 0x0a6d0, 0x055d4, //2060-2069\n    0x052d0, 0x0a9b8, 0x0a950, 0x0b4a0, 0x0b6a6, 0x0ad50, 0x055a0, 0x0aba4, 0x0a5b0, 0x052b0, //2070-2079\n    0x0b273, 0x06930, 0x07337, 0x06aa0, 0x0ad50, 0x14b55, 0x04b60, 0x0a570, 0x054e4, 0x0d160, //2080-2089\n    0x0e968, 0x0d520, 0x0daa0, 0x16aa6, 0x056d0, 0x04ae0, 0x0a9d4, 0x0a2d0, 0x0d150, 0x0f252, //2090-2099\n    0x0d520 //2100\n  ],\n  lunarMonth = ['正', '二', '三', '四', '五', '六', '七', '八', '九', '十', '冬', '腊'],\n  lunarDay = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '初', '廿'],\n  tianGan = ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸'],\n  diZhi = ['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥'];\n\n// 公历转农历函数\nfunction toLunar(sy, sm, sd) {\n  // 输入的月份减1处理\n  sm -= 1;\n\n  // 计算与公历基准的相差天数\n  // Date.UTC()返回的是距离公历1970年1月1日的毫秒数,传入的月份需要减1\n  let daySpan = (Date.UTC(sy, sm, sd) - Date.UTC(1949, 0, 29)) / (24 * 60 * 60 * 1000) + 1;\n  let ly, lm, ld;\n  // 确定输出的农历年份\n  for (let j = 0; j < lunarYearArr.length; j++) {\n    daySpan -= lunarYearDays(lunarYearArr[j]);\n    if (daySpan <= 0) {\n      ly = 1949 + j;\n      // 获取农历年份确定后的剩余天数\n      daySpan += lunarYearDays(lunarYearArr[j]);\n      break\n    }\n  }\n\n  // 确定输出的农历月份\n  for (let k = 0; k < lunarYearMonths(lunarYearArr[ly - 1949]).length; k++) {\n    daySpan -= lunarYearMonths(lunarYearArr[ly - 1949])[k];\n    if (daySpan <= 0) {\n      // 有闰月时，月份的数组长度会变成13，因此，当闰月月份小于等于k时，lm不需要加1\n      if (hasLeapMonth(lunarYearArr[ly - 1949]) && hasLeapMonth(lunarYearArr[ly - 1949]) <= k) {\n        if (hasLeapMonth(lunarYearArr[ly - 1949]) < k) {\n          lm = k;\n        } else if (hasLeapMonth(lunarYearArr[ly - 1949]) === k) {\n          lm = '闰' + k;\n        } else {\n          lm = k + 1;\n        }\n      } else {\n        lm = k + 1;\n      }\n      // 获取农历月份确定后的剩余天数\n      daySpan += lunarYearMonths(lunarYearArr[ly - 1949])[k];\n      break\n    }\n  }\n\n  // 确定输出农历哪一天\n  ld = daySpan;\n\n  // 将计算出来的农历月份转换成汉字月份，闰月需要在前面加上闰字\n  if (hasLeapMonth(lunarYearArr[ly - 1949]) && (typeof (lm) === 'string' && lm.indexOf('闰') > -1)) {\n    lm = `闰${lunarMonth[/\\d/.exec(lm) - 1]}`\n  } else {\n    lm = lunarMonth[lm - 1];\n  }\n\n  // 将计算出来的农历年份转换为天干地支年\n  ly = getTianGan(ly) + getDiZhi(ly);\n\n  // 将计算出来的农历天数转换成汉字\n  if (ld < 11) {\n    ld = `${lunarDay[10]}${lunarDay[ld-1]}`\n  } else if (ld > 10 && ld < 20) {\n    ld = `${lunarDay[9]}${lunarDay[ld-11]}`\n  } else if (ld === 20) {\n    ld = `${lunarDay[1]}${lunarDay[9]}`\n  } else if (ld > 20 && ld < 30) {\n    ld = `${lunarDay[11]}${lunarDay[ld-21]}`\n  } else if (ld === 30) {\n    ld = `${lunarDay[2]}${lunarDay[9]}`\n  }\n\n  // console.log(ly, lm, ld);\n\n  return {\n    lunarYear: ly,\n    lunarMonth: lm,\n    lunarDay: ld,\n  }\n}\n\n// 计算农历年是否有闰月，参数为存储农历年的16进制\n// 农历年份信息用16进制存储，其中16进制的最后1位可以用于判断是否有闰月\nfunction hasLeapMonth(ly) {\n  // 获取16进制的最后1位，需要用到&与运算符\n  if (ly & 0xf) {\n    return ly & 0xf\n  } else {\n    return false\n  }\n}\n\n// 如果有闰月，计算农历闰月天数，参数为存储农历年的16进制\n// 农历年份信息用16进制存储，其中16进制的第1位（0x除外）可以用于表示闰月是大月还是小月\nfunction leapMonthDays(ly) {\n  if (hasLeapMonth(ly)) {\n    // 获取16进制的第1位（0x除外）\n    return (ly & 0xf0000) ? 30 : 29\n  } else {\n    return 0\n  }\n}\n\n// 计算农历一年的总天数，参数为存储农历年的16进制\n// 农历年份信息用16进制存储，其中16进制的第2-4位（0x除外）可以用于表示正常月是大月还是小月\nfunction lunarYearDays(ly) {\n  let totalDays = 0;\n\n  // 获取正常月的天数，并累加\n  // 获取16进制的第2-4位，需要用到>>移位运算符\n  for (let i = 0x8000; i > 0x8; i >>= 1) {\n    let monthDays = (ly & i) ? 30 : 29;\n    totalDays += monthDays;\n  }\n  // 如果有闰月，需要把闰月的天数加上\n  if (hasLeapMonth(ly)) {\n    totalDays += leapMonthDays(ly);\n  }\n\n  return totalDays\n}\n\n// 获取农历每个月的天数\n// 参数需传入16进制数值\nfunction lunarYearMonths(ly) {\n  let monthArr = [];\n\n  // 获取正常月的天数，并添加到monthArr数组中\n  // 获取16进制的第2-4位，需要用到>>移位运算符\n  for (let i = 0x8000; i > 0x8; i >>= 1) {\n    monthArr.push((ly & i) ? 30 : 29);\n  }\n  // 如果有闰月，需要把闰月的天数加上\n  if (hasLeapMonth(ly)) {\n    monthArr.splice(hasLeapMonth(ly), 0, leapMonthDays(ly));\n  }\n\n  return monthArr\n}\n\n// 将农历年转换为天干，参数为农历年\nfunction getTianGan(ly) {\n  let tianGanKey = (ly - 3) % 10;\n  if (tianGanKey === 0) tianGanKey = 10;\n  return tianGan[tianGanKey - 1]\n}\n\n// 将农历年转换为地支，参数为农历年\nfunction getDiZhi(ly) {\n  let diZhiKey = (ly - 3) % 12;\n  if (diZhiKey === 0) diZhiKey = 12;\n  return diZhi[diZhiKey - 1]\n}\n\nexport {toLunar};"]}