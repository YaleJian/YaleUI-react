{"version":3,"sources":["../../src/components/Input/InputDemo.js"],"names":["InputDemo","props","treeData","state","selectData","selectData2","checkboxData","returnData","inputValue","onChange","bind","getSelectData","toString","id","text","getSelectData2","getCheckboxData","getReturnData","e","setState","React","Component","defaultProps"],"mappings":"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","file":"InputDemo.js","sourcesContent":["import React from \"react\";\nimport Input from \"./Input\";\nimport Icon from \"../utils/Icon\";\nimport TreeDemo from \"../Tree/TreeDemo\";\nimport Tree from \"../Tree/Tree\";\nimport {testTreeData} from \"../Tree/TreeUtil\";\n\nclass InputDemo extends React.Component {\n    static defaultProps = {};\n\n    constructor(props) {\n        super(props);\n        let treeData = testTreeData(5, 20);\n        this.state = {\n            treeData,\n            selectData: \"\",\n            selectData2: \"\",\n            checkboxData: \"\",\n            returnData: \"\",\n            inputValue: \"\",\n        }\n    }\n\n    render() {\n        return <React.Fragment>\n\n            <div className=\"ya-p\">\n                <h2>基础输入框</h2>\n                <Input placeholder={\"请输入内容\"} onChange={this.onChange.bind(this)} value={this.state.inputValue}/>\n                <span className=\"padding0-10\">输入的值：{this.state.inputValue}</span>\n            </div>\n\n            <div className=\"ya-p\">\n                <h2>根据内容长短自动宽度的输入框</h2>\n                <Input placeholder={\"请输入内容\"} onChange={this.onChange.bind(this)} value={this.state.inputValue} autoContent={true}/>\n                <br/>\n                <Input placeholder={\"请输入内容\"} onChange={this.onChange.bind(this)} value={this.state.inputValue} autoContent={1.4}/>\n                <span className=\"padding0-10\">输入的值：{this.state.inputValue}</span>\n            </div>\n\n            <div className=\"ya-p\">\n                <h2>密码框</h2>\n                <Input type=\"password\" placeholder={\"请输入内容\"} onChange={this.onChange.bind(this)} value={this.state.inputValue}/>\n            </div>\n\n            <div className=\"ya-p\">\n                <h2>搜索框</h2>\n                <Input type=\"search\" placeholder={\"请输入内容\"} onChange={this.onChange.bind(this)} value={this.state.inputValue}/>\n                <br/>\n                <Input type=\"search\" className=\"right\" placeholder={\"请输入内容\"} onChange={this.onChange.bind(this)} value={this.state.inputValue}/>\n            </div>\n\n            <div className=\"ya-p\">\n                <h2>带图标的输入框</h2>\n                <Input type=\"withIcon\" placeholder={\"请输入内容\"} icon={[<Icon/>]} onChange={this.onChange.bind(this)} value={this.state.inputValue}/><br/>\n                <Input type=\"withIcon\" placeholder={\"请输入内容\"} icon={[<Icon/>,<Icon/>]} onChange={this.onChange.bind(this)} value={this.state.inputValue}/>\n            </div>\n\n            <div className=\"ya-p\">\n                <h2>文本域</h2>\n                <Input type=\"textarea\" placeholder={\"请输入内容\"} onChange={this.onChange.bind(this)} value={this.state.inputValue}/>\n            </div>\n\n            <div className=\"ya-p\">\n                <h2>数字框</h2>\n                任意数字：<Input type=\"number\" onChange={this.onChange.bind(this)} value={this.state.inputValue}/><br/>\n                整数：<Input type=\"integer\" onChange={this.onChange.bind(this)} value={this.state.inputValue}/>\n            </div>\n\n            <div className=\"ya-p\">\n                <h2>选择框</h2>\n\n                <span className={\"margin0-10\"}>入参为字符串数组：</span>\n                <Input type=\"select\"\n                       dropDownBoxData={[\"item1\", \"item2\", \"item3\", \"item4\", \"item5\", \"item6\",]}\n                       onChange={this.getSelectData.bind(this)}\n                       value={this.state.selectData}\n                       placeholder={\"请选择\"}/>\n                <span>选中的值：{this.state.selectData.toString()}</span>\n                <br/>\n                <span>入参为对象数组：</span>\n                <Input type=\"select\"\n                       dropDownBoxData={[{id: 1, text: \"item1\"}, {id: 1, text: \"item2\"}, {id: 2, text: \"item3\"}, {\n                           id: 3,\n                           text: \"item4\"\n                       }, {id: 4, text: \"item5\"},]}\n                       onChange={this.getSelectData2.bind(this)}\n                       value={this.state.selectData2}\n                       placeholder={\"请选择\"}/>\n                <span className={\"margin0-10\"}>选中的值：{this.state.selectData2.toString()}</span>\n            </div>\n\n            <div className=\"ya-p\">\n                <h2>多选选择框</h2>\n\n                <Input type=\"popUp\"\n                       content={<Tree treeData={this.state.treeData}\n                                      openBtn={false}\n                                      checkbox={true}\n                                      checkboxClick={this.getCheckboxData.bind(this)}\n                       />}\n                       value={this.state.checkboxData}\n                       placeholder={\"请选择\"}/>\n                <span>选中的值：{this.state.checkboxData.toString()}</span>\n\n            </div>\n\n\n\n            <div className=\"ya-p\">\n                <h2>自定义弹出内容输入框：在弹出内容中确认返回值</h2>\n                <div>输出的值：{this.state.returnData.toString()}</div>\n                <Input type=\"popUp\"\n                       content={<TreeDemo getReturnData={this.getReturnData.bind(this)}/>}\n                       value={this.state.returnData}\n                       placeholder={\"请选择\"}/>\n            </div>\n        </React.Fragment>;\n    }\n\n    onChange(inputValue,e) {\n        this.setState({inputValue});\n    }\n\n    getReturnData(returnData) {\n        this.setState({returnData});\n    }\n\n    getSelectData(selectData,e) {\n        this.setState({selectData});\n    }\n\n    getSelectData2(selectData2) {\n        this.setState({selectData2});\n    }\n    getCheckboxData(checkboxData) {\n        this.setState({checkboxData});\n    }\n}\n\nexport {InputDemo};"]}