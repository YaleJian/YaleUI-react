{"version":3,"sources":["../../src/components/Login/Login.js"],"names":["defaultUser","phoneNumber","idNum","nickname","password","userToken","headPortrait","pin","Login","props","autoLogin","localStorage","getItem","authState","getAuthState","NO_LOGIN","state","type","user","Boolean","agree","verificationCode","countdown60","pin1","pin2","pin3","pin4","passwordShow","confirmPasswordShow","mini","authPage","pages","noLogin","LOGIN_SUCCESS","loginSuccess","AUTH_CORE_PASSWORD","corePassword","AUTH_VERIFICATION_CODE","AUTH_PIN","AUTH_ACTION","action","AUTH_QRCode","qrCode","AGREEMENT","agreement","setState","callback","React","Component","TYPE_LOGIN","TYPE_REGISTER","defaultProps","cookieToken","Cookie","getCookie","getUser","localToken","setCookie","noLoginClass","loginPage","hideBtn","logout","bind","auth","register","inputInvalid","phoneNumberEnter","passwordEnter","confirmPassword","operate","creditLogin","verificationCodeEnter","vCode","getVerificationCode","back","pinKeyUp","pinInput","clear","script","document","createElement","async","src","head","appendChild","_this","window","res","console","log","ret","agreementConfirm","agreeInput","autoLoginChange","e","target","value","replace","className","indexOf","keyCode","prevNode","previousSibling","focus","nextNode","nextElementSibling","name","clearLoginHistory","text","currentTarget","setCustomValidity","login","getData","preventDefault","localPin","thisPin","dataUtils","MD5","setItem","removeItem","data","alert","axios","post","object2FormData","withCredentials","then","catch","setUser","code","delCookie","isNaN","setInterval","clearInterval"],"mappings":"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","file":"Login.js","sourcesContent":["import React from \"react\";\nimport \"./login.css\";\nimport \"../Animate/animate.css\";\nimport QRCode from 'qrcode.react';\nimport {axios} from './../utils/Axios';\nimport {Icon} from '..';\nimport {User} from \"..\";\nimport {result} from \"..\";\nimport {Cookie} from \"..\";\nimport {Button} from \"..\";\nimport {dataUtils} from \"..\";\n\nconst defaultUser = {\n    phoneNumber: \"\",\n    idNum: \"\",\n    nickname: \"昵称\",\n    password: \"\",\n    userToken: \"\",\n    headPortrait: \"\",\n    pin: true,\n};\n\n/**\n * 登陆注册\n */\nclass Login extends React.Component {\n    static NO_LOGIN = 0;\n    static LOGIN_SUCCESS = 1;\n    static AUTH_CORE_PASSWORD = 2;\n    static AUTH_VERIFICATION_CODE = 3;\n    static AUTH_PIN = 4;\n    static AUTH_ACTION = 5;\n    static AUTH_QRCode = 6;\n    static AGREEMENT = 7;\n\n    static TYPE_LOGIN = 1;\n    static TYPE_REGISTER = 2;\n\n\n    static defaultProps = {};\n\n    constructor(props) {\n        super(props);\n\n        //获取本地缓存的用户信息和配置\n        let autoLogin = localStorage.getItem(\"autoLogin\") || false;\n        let authState = this.getAuthState(autoLogin) || Login.NO_LOGIN;\n        this.state = {\n            type: \"\",\n            user: defaultUser,\n            phoneNumber: \"\",\n            password: \"\",\n            headPortrait: \"\",\n            authState,\n            autoLogin: Boolean(autoLogin),\n            agree: false,\n            verificationCode: \"\",\n            countdown60: \"获取\",\n            pin1: \"\",\n            pin2: \"\",\n            pin3: \"\",\n            pin4: \"\",\n            passwordShow: false,\n            confirmPasswordShow: false,\n            mini: false,\n        };\n    }\n\n    render() {\n        let authPage = \"\";\n        switch (this.state.authState) {\n            case Login.NO_LOGIN :\n                authPage = this.pages.noLogin();\n                break;\n            case Login.LOGIN_SUCCESS :\n                authPage = this.pages.loginSuccess();\n                break;\n            case Login.AUTH_CORE_PASSWORD  :\n                authPage = this.pages.corePassword();\n                break;\n            case Login.AUTH_VERIFICATION_CODE :\n                authPage = this.pages.verificationCode();\n                break;\n            case Login.AUTH_PIN :\n                authPage = this.pages.pin();\n                break;\n            case Login.AUTH_ACTION :\n                authPage = this.pages.action();\n                break;\n            case Login.AUTH_QRCode :\n                authPage = this.pages.qrCode();\n                break;\n            case Login.AGREEMENT :\n                authPage = this.pages.agreement();\n                break;\n            default:\n                break;\n        }\n        return <React.Fragment>\n            {this.state.authState === Login.AUTH_PIN ? <div className=\"pin-mask\">Lock</div> : \"\"}\n            <div className=\"ya-login animated fastest fadeInDownSmall\">\n                {authPage}\n            </div>\n        </React.Fragment>\n    }\n\n    componentWillUnmount() {\n        // 卸载异步操作设置状态\n        this.setState = (state, callback) => {\n            return \"\";\n        }\n    }\n\n    getAuthState = (autoLogin) => {\n        let pin = localStorage.getItem(\"pin\");\n        //登陆认证\n        let cookieToken = Cookie.getCookie(\"userToken\");\n        if (cookieToken) {\n            this.getUser();\n        } else if (autoLogin) {\n            let localToken = localStorage.getItem(\"userToken\");\n            if (localToken) {\n                if (pin) {\n                    return Login.AUTH_PIN;\n                } else {\n                    Cookie.setCookie(\"userToken\", localToken);\n                    this.getUser();\n                }\n            } else {\n                return Login.NO_LOGIN;\n            }\n        } else {\n            return Login.NO_LOGIN;\n        }\n    };\n\n    pages = {\n\n        noLogin: () => {\n            let noLoginClass = \"noLogin \";\n            noLoginClass = this.state.authState === Login.NO_LOGIN ? noLoginClass : noLoginClass + \"active\";\n            let loginPage = <React.Fragment>\n                {this.state.authState === Login.NO_LOGIN || this.state.type === Login.TYPE_LOGIN ?\n                    <span className=\"loginEntrance\" onClick={() => this.setState({\n                        type: Login.TYPE_LOGIN,\n                        authState: Login.AUTH_CORE_PASSWORD\n                    })}>登陆</span> : \"\"}\n                {this.state.authState === Login.NO_LOGIN || this.state.type === Login.TYPE_REGISTER ?\n                    <span className=\"registerEntrance\" onClick={() => this.setState({\n                        type: Login.TYPE_REGISTER,\n                        authState: Login.AUTH_CORE_PASSWORD\n                    })}>注册</span> : \"\"}\n                {this.state.authState !== Login.NO_LOGIN ?\n                    <span className=\"close\" onClick={() => this.setState({authState: Login.NO_LOGIN})}><Icon\n                        name=\"i-BAI-guanbi\"/></span> : \"\"}\n            </React.Fragment>;\n            let hideBtn = <Button className={\"hideBtn white\"}\n                                  content={<Icon name={this.state.mini ? \"i-BAI-zuojiantou\" : \"i-BAI-youjiantou\"}/>}\n                                  onClick={() => this.setState({mini : !this.state.mini})}/>;\n            return <React.Fragment>\n                {this.state.authState === Login.NO_LOGIN ? hideBtn : \"\"}\n                {this.state.mini ? \"\" : <div className={noLoginClass}> {loginPage}</div>}\n            </React.Fragment>\n        },\n        loginSuccess: () => {\n            return <User data={this.state.user} logout={this.logout.bind(this)}/>\n        },\n        corePassword: () => {\n            return <React.Fragment>\n                {this.pages.noLogin()}\n                <form\n                    onSubmit={this.state.type === Login.TYPE_LOGIN ? this.auth.corePassword.bind(this) : this.register.bind(this)}>\n                    <div className=\"corePassword\">\n                        <input placeholder=\"手机号\" type=\"tel\" value={this.state.phoneNumber}\n                               pattern=\"[0-9]*\"\n                               onInvalid={this.pages.inputInvalid.bind(this, \"输入正确的手机号\")}\n                               required\n                               onChange={this.pages.phoneNumberEnter.bind(this)}/>\n                        <div>\n                            <input placeholder=\"密码\" type={this.state.passwordShow ? \"text\" : \"password\"}\n                                   value={this.state.password}\n                                   onChange={this.pages.passwordEnter.bind(this)}/>\n                            <span className=\"showPsw\"\n                                  onClick={() => this.setState({passwordShow: !this.state.passwordShow})}><Icon\n                                name={this.state.passwordShow ? \"i-showPsw\" : \"i-hidePsw\"}/></span>\n                        </div>\n                        {this.state.type === Login.TYPE_REGISTER ?\n                            <div>\n                                <input placeholder=\"确认密码\" type={this.state.confirmPasswordShow ? \"text\" : \"password\"}\n                                       defaultValue={this.state.confirmPassword}\n                                       onChange={this.pages.confirmPassword.bind(this)}/>\n                                <span className=\"showPsw\"\n                                      onClick={() => this.setState({confirmPasswordShow: !this.state.confirmPasswordShow})}>\n                                    <Icon name={this.state.confirmPasswordShow ? \"i-showPsw\" : \"i-hidePsw\"}/>\n                                </span>\n                            </div>\n                            : \"\"}\n                    </div>\n                    {this.pages.operate()}\n                    {this.pages.creditLogin()}\n                    {this.pages.autoLogin()}\n                </form>\n            </React.Fragment>\n        },\n        verificationCode: () => {\n            return <React.Fragment>\n                {this.pages.noLogin()}\n                <div className=\"verificationCode\">\n                    <input placeholder=\"手机号\" type=\"tel\" value={this.state.phoneNumber}\n                           onChange={this.pages.phoneNumberEnter.bind(this)}/>\n                    <input className=\"verificationCodeEnter\" placeholder=\"短信验证码\" type=\"tel\"\n                           onChange={this.pages.verificationCodeEnter.bind(this)}/>\n                    <button className=\"getVerificationCode\"\n                            onClick={this.vCode.getVerificationCode.bind(this)}>{this.state.countdown60}</button>\n                </div>\n                {this.pages.operate()}\n                {this.pages.back()}\n                {this.pages.autoLogin()}\n            </React.Fragment>\n        },\n        pin: () => {\n            return <React.Fragment>\n                <div className=\"pinTitle\">请输入PIN密码解锁</div>\n                <div className=\"pin \" onKeyUp={this.pages.pinKeyUp.bind()}>\n                    <input autoFocus={true} type=\"text\" className=\"pinText\" maxLength=\"1\" name=\"1\"\n                           onInput={this.pages.pinInput.bind(this)} defaultValue={this.state.pin1} autoComplete=\"off\"/>\n                    <input type=\"text\" className=\"pinText\" maxLength=\"1\" name=\"2\"\n                           onInput={this.pages.pinInput.bind(this)} defaultValue={this.state.pin2} autoComplete=\"off\"/>\n                    <input type=\"text\" className=\"pinText\" maxLength=\"1\" name=\"3\"\n                           onInput={this.pages.pinInput.bind(this)} defaultValue={this.state.pin3} autoComplete=\"off\"/>\n                    <input type=\"text\" className=\"pinText\" maxLength=\"1\" name=\"4\"\n                           onInput={this.pages.pinInput.bind(this)} defaultValue={this.state.pin4} autoComplete=\"off\"/>\n                </div>\n                {this.pages.back()}\n                {this.pages.clear()}\n            </React.Fragment>\n        },\n        action: () => {\n            const script = document.createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.src = 'https://ssl.captcha.qq.com/TCaptcha.js';\n            document.head.appendChild(script);\n\n            let _this = this;\n            window.callback = (res) => {\n                console.log(res);\n                // res（用户主动关闭验证码）= {ret: 2, ticket: null}\n                // res（验证成功） = {ret: 0, ticket: \"String\", randstr: \"String\"}\n                if (res.ret === 0) {\n                    _this.auth.action(_this);\n                }\n            };\n\n            return <React.Fragment>\n                {this.pages.noLogin()}\n                <div className=\"action \">\n                    <button className=\"actionBtn\" id=\"TencentCaptcha\" data-appid=\"2030796655\" data-cbfn=\"callback\">点击登录\n                    </button>\n                </div>\n                {this.pages.back()}\n                {this.pages.clear()}\n            </React.Fragment>\n        },\n        qrCode: () => {\n            return <React.Fragment>\n                {this.pages.noLogin()}\n                <div className=\"qrCode\">\n                    <div className=\"qrCodeContent\">\n                        <QRCode\n                            value={\"https://yalejian.com\"}  //value参数为生成二维码的链接\n                            size={174} //二维码的宽高尺寸\n                            fgColor=\"#000000\"  //二维码的颜色\n                        />\n                    </div>\n                    <div className=\"qrCodeState\">扫码成功</div>\n                    <div className=\"tips\">扫一扫登录</div>\n                </div>\n                {this.pages.autoLogin()}\n                {this.pages.back()}\n            </React.Fragment>\n        },\n        agreement: () => {\n            return <div className=\"agreement\">\n                <div className=\"title\">注册条款和隐私政策</div>\n                <div>\n                    <strong>同意以下条款</strong>：<br/>\n                    1. 遵守中华人民共和国相关法律法规,不可危害国家安全和稳定，破坏民族团结<br/>\n                    2. 遵守本网站的规则：不侵犯其他用户、不侵犯本站及其创始维护人员<br/>\n                    3. 遵守道德文明,不控制舆论<br/>\n                    4. 需要配合实名认证，并且一人一账号<br/>\n                    4. 如有违背以上条款，本站维护人员有权进行处罚和数据信息修改<br/>\n                    <br/>\n                    <strong>承诺以下隐私政策和安全</strong>：<br/>\n                    1. 保证注册的用户信息安全，网站架构设计之初，已经斟酌再三避免存储用户信息，不收集用户信息牟利<br/>\n                    2. 重要信息进行加密和脱敏，密文存储的信息仅用于身份认证，不进行解密也难以解密<br/>\n                    3. 明文存储的信息即使泄露也不涉及重要隐私安全<br/>\n                    <br/>\n                    <strong>附录</strong>：<br/>\n                    1. 本网站正在建设中，以上隐私政策安全保障需要在网站建设完毕实现<br/>\n                </div>\n                {this.pages.back()}\n            </div>;\n        },\n        operate: () => {\n            return <React.Fragment>\n                <div className=\"operate\">\n                    {this.state.type === Login.TYPE_LOGIN ?\n                        <button type=\"submit\" className=\"loginBtn\">登录</button> : \"\"}\n                    {this.state.type === Login.TYPE_REGISTER ?\n                        <button type=\"submit\" className=\"registerBtn\">注册</button> : \"\"}\n                </div>\n                {this.state.type === Login.TYPE_REGISTER ? this.pages.agreementConfirm() : \"\"}\n            </React.Fragment>;\n\n        },\n        agreementConfirm: () => {\n            return <div className=\"agreementConfirm\">\n                <input type=\"checkbox\" id=\"agreementInput\" className=\"agreementInput\"\n                       defaultChecked={this.state.agree} onChange={this.pages.agreeInput.bind(this)}/>\n                <label htmlFor=\"agreementInput\" className=\"agreementText\">我已阅读并同意\n                    <span className=\"agreementLink\"\n                          onClick={() => this.setState({authState: Login.AGREEMENT})}>此条款</span>\n                </label>\n            </div>\n        },\n        autoLogin: () => {\n            return <div className=\"autoLogin\">\n                <input type=\"checkbox\" id=\"autoLoginInput\" className=\"autoLoginInput\"\n                       defaultChecked={this.state.autoLogin}\n                       onChange={this.auth.autoLoginChange.bind(this)}/>\n                <label htmlFor=\"autoLoginInput\" className=\"autoLoginText\">以后自动登录</label>\n            </div>\n        },\n        creditLogin: () => {\n            return <React.Fragment>\n                <div className=\"creditLogin\">\n                    <span className=\"verificationCodeLogin\"\n                          onClick={() => this.setState({authState: Login.AUTH_VERIFICATION_CODE})}><Icon\n                        name=\"i-message\"/></span>\n                    <span className=\"qrCodeLogin\" onClick={() => this.setState({authState: Login.AUTH_QRCode})}><Icon\n                        name=\"i-qrCode\"/></span>\n                    <span><Icon name=\"i-wechat\"/> </span>\n                    <span><Icon name=\"i-QQ\"/> </span>\n                </div>\n            </React.Fragment>\n        },\n\n        back: () => {\n            return <div className=\"loginBack\"\n                        onClick={() => this.setState({authState: Login.AUTH_CORE_PASSWORD})}>返回</div>\n        },\n        phoneNumberEnter: (e) => {\n            this.setState({phoneNumber: e.target.value.replace(/[^\\d]/g, '')});\n        },\n        passwordEnter: (e) => {\n            this.setState({password: e.target.value.replace(/\\s*/g, \"\")});\n        },\n        confirmPassword: (e) => {\n            this.setState({confirmPassword: e.target.value.replace(/\\s*/g, \"\")});\n        },\n        verificationCodeEnter: (e) => {\n            this.setState({verificationCode: e.target.value.replace(/[^\\d]/g, '')});\n        },\n        agreeInput: () => {\n\n            this.setState({agree: !this.state.agree});\n        },\n        pinKeyUp: (e) => {\n            // 删除/后退键往前，其他键盘往后\n            if (e.target.className.indexOf(\"pinText\") > -1) {\n                if (e.keyCode === 46 || e.keyCode === 8) {\n                    let prevNode = e.target.previousSibling;\n                    if (prevNode && prevNode.className.indexOf(\"pinText\") > -1) prevNode.focus();\n                } else if ((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105)) {\n                    let nextNode = e.target.nextElementSibling;\n                    if (e.target.value && nextNode && nextNode.className.indexOf(\"pinText\") > -1) nextNode.focus();\n                } else if (e.keyCode === 229) {\n                    // alert(\"请切换其他英文输入法\")\n                }\n            }\n        },\n        pinInput: (e) => {\n            let value = e.target.value.replace(/[^\\d]/g, '');\n            e.target.value = value;\n            e.target.focus();\n            if (value) {\n                if (e.target.name === \"4\") {\n                    this.auth.pin(value);\n                } else {\n                    let state = {};\n                    state[\"pin\" + e.target.name] = value;\n                    this.setState(state);\n                }\n            }\n        },\n        clear: () => {\n            return <div className=\"clearLoginHistory\" onClick={this.auth.clearLoginHistory.bind(this)}>清除登录记录</div>\n        },\n        inputInvalid: (text, e) => {\n            e.currentTarget.setCustomValidity(text);\n        },\n    };\n\n    auth = {\n        //账号密码登录\n        corePassword: (e) => {\n            this.login(this.auth.getData());\n            e.preventDefault();\n        },\n        verificationCode: () => {\n            let authState = 1;\n            this.setState({authState});\n        },\n        pin: (pin4) => {\n            //输到最后一个PIN立即校验\n            let localPin = localStorage.getItem(\"pin\");\n            let thisPin = \"\" + this.state.pin1 + this.state.pin2 + this.state.pin3 + pin4;\n            if (localPin === dataUtils.MD5(thisPin)) {\n                //验证通过\n                this.setState({authState: Login.LOGIN_SUCCESS});\n            }\n        },\n        action: () => {\n            //发送解除登陆锁定\n            this.setState({authState: Login.NO_LOGIN});\n        },\n        autoLoginChange: () => {\n            //设置以后登录标志\n            if (!this.state.autoLogin) {\n                localStorage.setItem(\"autoLogin\", \"true\");\n            } else {\n                //清除登录记录\n                localStorage.removeItem(\"autoLogin\");\n            }\n            this.setState({autoLogin: !this.state.autoLogin});\n        },\n        clearLoginHistory: () => {\n            localStorage.clear();\n            this.setState({authState: 0});\n        },\n        getData: () => {\n            let data;\n            let phoneNumber = this.state.phoneNumber;\n            let password = this.state.password;\n            let verificationCode = this.state.verificationCode;\n            if (this.state.authState === Login.AUTH_CORE_PASSWORD) {\n                data = {\n                    phoneNumber,\n                    password: dataUtils.MD5(dataUtils.MD5(password)),\n                };\n            } else if (this.state.authState === Login.AUTH_VERIFICATION_CODE) {\n                data = {\n                    phoneNumber,\n                    verificationCode,\n                };\n            }\n            return data;\n        }\n\n    };\n    register = (e) => {\n        e.preventDefault();\n        if (this.state.password !== this.state.confirmPassword) {\n            alert(\"两次密码不一致\");\n            return;\n        }\n        if (!this.state.agree) {\n            alert(\"需要同意协议\");\n            return;\n        }\n        axios.post('/service/user/register', dataUtils.object2FormData(this.auth.getData()), {withCredentials: true})\n            .then((res) => {\n                result(res, (user) => {\n                    //如果开启了PIN\n                    if (user.pin) localStorage.setItem(\"pin\", user.pin);\n                    this.setState({authState: Login.LOGIN_SUCCESS, user});\n                });\n            })\n            .catch(function (res) {\n                console.log(res);\n            });\n    };\n\n    login = (user) => {\n        axios.post('/service/user/login', dataUtils.object2FormData(user), {withCredentials: true})\n            .then((res) => {\n                result(res, (user) => {\n                    this.setUser(user)\n                });\n\n                //登陆错误超过2次，开启动作验证\n                if (res.data.code === 20006) {\n                    this.setState({authState: Login.AUTH_ACTION, user});\n                }\n            })\n    };\n    logout = () => {\n        Cookie.delCookie(\"userToken\");\n        localStorage.removeItem(\"userToken\");\n        this.setState({authState: Login.NO_LOGIN});\n    };\n    getUser = () => {\n        axios.post('/service/user/getUser', \"\", {withCredentials: true})\n            .then((res) => {\n                result(res, (user) => {\n                    this.setUser(user)\n                });\n            })\n            .catch(function (e) {\n                console.log(e);\n            });\n    };\n    setUser = (user) => {\n        if (localStorage.getItem(\"autoLogin\")) {\n            //配置了自动登录，使用localStorage存储的登录记录\n            localStorage.setItem(\"userToken\", Cookie.getCookie(\"userToken\"));\n            //如果设置了pin密码，则在本地存储下来，用于客户端页面验证\n            if (user.pin) localStorage.setItem(\"pin\", dataUtils.MD5(user.pin));\n        } else {\n            //自动登录关闭，清除\n            localStorage.clear();\n        }\n        if (user) this.setState({authState: Login.LOGIN_SUCCESS, user});\n    };\n\n    vCode = {\n\n        getVerificationCode: () => {\n\n            if (!isNaN(this.state.countdown60)) return;\n\n            let user = {phoneNumber: this.state.phoneNumber};\n            axios.post('/service/sms/single', dataUtils.object2FormData(user), {withCredentials: true})\n                .then((res) => {\n                    result(res, () => {\n                        this.setState({countdown60: 60});\n                        this.countdown60 = setInterval(() => this.vCode.countdown60(), 1000);\n                    });\n                })\n                .catch(function (res) {\n                    console.log(res);\n                });\n        },\n        countdown60: () => {\n            let countdown60 = this.state.countdown60;\n            if (countdown60 > 1) {\n                this.setState({countdown60: countdown60 - 1});\n            } else {\n                clearInterval(this.countdown60);\n                this.setState({countdown60: \"获取\"});\n            }\n        },\n    }\n\n}\n\nexport {Login};"]}