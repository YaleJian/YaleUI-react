{"version":3,"sources":["../../src/components/Pagination/Pagination.js"],"names":["Pagination","props","getSelectData","page","getPage","setState","prev","state","next","total","eachPage","totalPage","Math","ceil","dropData","Array","fill","map","_","h","bind","React","Component","defaultProps"],"mappings":";;;;;;;;;AAAA;;;;AACA;;AAGA;;;;;;;;;;AAEA;;;IAGMA,U;;;AASF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4HACTA,KADS;;AAAA,cA+BnBC,aA/BmB,GA+BH,UAACC,IAAD,EAAU;AACtB,kBAAKF,KAAL,CAAWG,OAAX,CAAmBD,IAAnB;AACA,kBAAKE,QAAL,CAAc,EAACF,UAAD,EAAd;AACH,SAlCkB;;AAAA,cAmCnBG,IAnCmB,GAmCZ,YAAM;AACT,gBAAIH,OAAO,MAAKI,KAAL,CAAWJ,IAAtB;AACA,gBAAIA,OAAO,CAAX,EAAc,MAAKE,QAAL,CAAc,EAACF,MAAMA,OAAO,CAAd,EAAd;AACjB,SAtCkB;;AAAA,cAuCnBK,IAvCmB,GAuCZ,YAAM;AACT,gBAAIL,OAAO,MAAKI,KAAL,CAAWJ,IAAtB;AACA,gBAAIA,OAAO,MAAKI,KAAL,CAAWE,KAAtB,EAA6B,MAAKJ,QAAL,CAAc,EAACF,MAAMA,OAAO,CAAd,EAAd;AAChC,SA1CkB;;AAEf,cAAKI,KAAL,GAAa;AACTJ,kBAAM,MAAKF,KAAL,CAAWE,IADR;AAETO,sBAAU,MAAKT,KAAL,CAAWS,QAFZ;AAGTD,mBAAO,MAAKR,KAAL,CAAWQ;AAHT,SAAb;AAFe;AAOlB;;;;iCAEQ;AACL,gBAAIN,OAAO,KAAKI,KAAL,CAAWJ,IAAtB;AACA,gBAAIQ,YAAYC,KAAKC,IAAL,CAAU,KAAKN,KAAL,CAAWE,KAAX,GAAmB,KAAKF,KAAL,CAAWG,QAAxC,CAAhB;AACA,gBAAII,WAAWH,YAAYI,MAAMJ,SAAN,EAAiBK,IAAjB,CAAsB,IAAtB,EAA4BC,GAA5B,CAAgC,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUA,IAAI,CAAd;AAAA,aAAhC,CAAZ,GAA+D,EAA9E;AACA,mBAAO;AAAA;AAAA,kBAAK,WAAW,eAAhB;AACH;AAAA;AAAA,sBAAM,SAAS,KAAKb,IAAL,CAAUc,IAAV,CAAe,IAAf,CAAf;AACI,kDAAC,SAAD,IAAQ,WAAW,gBAAgBjB,SAAS,CAAT,GAAa,WAAb,GAA2B,EAA3C,CAAnB;AACQ,iCAAS,8BAAC,OAAD,IAAM,MAAM,kBAAZ,GADjB;AADJ,iBADG;AAKH;AAAA;AAAA,sBAAM,WAAU,eAAhB;AACI,kDAAC,QAAD,IAAO,WAAU,MAAjB,EAAwB,MAAM,QAA9B,EAAwC,iBAAiBW,QAAzD;AACO,+BAAO,KAAKP,KAAL,CAAWJ,IADzB,EAC+B,aAAe,CAD9C;AAEO,kCAAU,KAAKD,aAAL,CAAmBkB,IAAnB,CAAwB,IAAxB,CAFjB,EAEgD,YAAY,KAF5D;AADJ,iBALG;AAUH;AAAA;AAAA,sBAAM,WAAU,MAAhB;AAAA;AAAA,iBAVG;AAWH;AAAA;AAAA,sBAAM,WAAU,MAAhB;AAAwBT;AAAxB,iBAXG;AAYH;AAAA;AAAA,sBAAM,SAAS,KAAKH,IAAL,CAAUY,IAAV,CAAe,IAAf,CAAf;AACI,kDAAC,SAAD,IAAQ,WAAW,gBAAgBjB,SAASQ,SAAT,GAAqB,WAArB,GAAmC,EAAnD,CAAnB;AACQ,iCAAS,8BAAC,OAAD,IAAM,MAAM,kBAAZ,GADjB;AADJ;AAZG,aAAP;AAgBH;;;;EAtCoBU,gBAAMC,S;;AAAzBtB,U,CACKuB,Y,GAAe;AAClBpB,UAAM,CADY,EACV;AACRO,cAAU,CAFQ,EAEN;AACZD,WAAO,CAHW,EAGR;AACVL,aAAS,mBAAM,CACd,CALiB,CAKhB;AALgB,C;QAuDlBJ,U,GAAAA,U","file":"Pagination.js","sourcesContent":["import React from \"react\";\nimport {Input} from \"..\";\nimport {Icon} from \"..\";\nimport {Button} from \"..\";\nimport \"./pagination.css\";\n\n/**\n * 分页\n */\nclass Pagination extends React.Component {\n    static defaultProps = {\n        page: 1,//当前页\n        eachPage: 1,//每页多少条\n        total: 1, //一共多少条数据\n        getPage: () => {\n        },//获取选择的页码\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: this.props.page,\n            eachPage: this.props.eachPage,\n            total: this.props.total\n        }\n    }\n\n    render() {\n        let page = this.state.page;\n        let totalPage = Math.ceil(this.state.total / this.state.eachPage);\n        let dropData = totalPage ? Array(totalPage).fill(null).map((_, h) => h + 1) : [];\n        return <div className={\"ya-pagination\"}>\n            <span onClick={this.prev.bind(this)}>\n                <Button className={\"item white\" + (page === 1 ? \" disabled\" : \"\")}\n                        content={<Icon name={\"i-BAI-zuojiantou\"}/>}/>\n            </span>\n            <span className=\"item pageItem\">\n                <Input className=\"page\" type={\"select\"} dropDownBoxData={dropData}\n                       value={this.state.page} autoContent = {0}\n                       onChange={this.getSelectData.bind(this)} selectIcon={false}/>\n            </span>\n            <span className=\"item\">/</span>\n            <span className=\"item\">{totalPage}</span>\n            <span onClick={this.next.bind(this)}>\n                <Button className={\"item white\" + (page === totalPage ? \" disabled\" : \"\")}\n                        content={<Icon name={\"i-BAI-youjiantou\"}/>}/></span>\n        </div>\n    }\n\n    getSelectData = (page) => {\n        this.props.getPage(page);\n        this.setState({page})\n    };\n    prev = () => {\n        let page = this.state.page;\n        if (page > 1) this.setState({page: page - 1});\n    };\n    next = () => {\n        let page = this.state.page;\n        if (page < this.state.total) this.setState({page: page + 1});\n    }\n\n\n}\n\nexport {Pagination};"]}